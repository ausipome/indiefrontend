{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\indieBubba\\\\frontend\\\\pages\\\\SignIn.js\";\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useState } from 'react';\nimport Footer from '../components/Footer';\nimport RequestReset from '../components/RequestReset';\nimport SignIn from '../components/SignIn';\nconst UPDATE_USER_MUTATION = gql`\n  mutation UPDATE_USER_MUTATION($id: ID!) {\n    updateUser(where: { id: $id }, data: { confirmed: \"yes\" }) {\n      confirmed\n    }\n  }\n`;\nexport default function SignInPage({\n  query\n}) {\n  const [updateUser, {\n    data,\n    error,\n    loading\n  }] = useMutation(UPDATE_USER_MUTATION);\n\n  async function updateUserFunc() {\n    const res = await updateUser({\n      variables: {\n        id: query.token\n      }\n    });\n  }\n\n  if (query !== null && query !== void 0 && query.token) {\n    updateUserFunc();\n  }\n\n  const {\n    0: sign,\n    1: setSign\n  } = useState(true);\n  const {\n    0: forgot,\n    1: setForgot\n  } = useState(false);\n\n  const signHandler = () => {\n    setSign(true);\n    setForgot(false);\n  };\n\n  const forgotHandler = () => {\n    setSign(false);\n    setForgot(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [sign && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: forgotHandler,\n        style: {\n          backgroundColor: 'white',\n          color: 'red'\n        },\n        children: \"Forgot Password! \\uD83D\\uDE43\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), forgot && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(RequestReset, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: signHandler,\n        style: {\n          backgroundColor: 'white',\n          color: 'red'\n        },\n        children: \"Back to Sign In! \\uD83D\\uDC48\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/User/Documents/indieBubba/frontend/pages/SignIn.js"],"names":["useMutation","gql","useState","Footer","RequestReset","SignIn","UPDATE_USER_MUTATION","SignInPage","query","updateUser","data","error","loading","updateUserFunc","res","variables","id","token","sign","setSign","forgot","setForgot","signHandler","forgotHandler","backgroundColor","color"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,MAAMC,oBAAoB,GAAGL,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,eAAe,SAASM,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA+B;AAC5C,QAAM,CAACC,UAAD,EAAa;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAb,IACJZ,WAAW,CAACM,oBAAD,CADb;;AAGA,iBAAeO,cAAf,GAAgC;AAC9B,UAAMC,GAAG,GAAG,MAAML,UAAU,CAAC;AAC3BM,MAAAA,SAAS,EAAE;AACTC,QAAAA,EAAE,EAAER,KAAK,CAACS;AADD;AADgB,KAAD,CAA5B;AAKD;;AACD,MAAIT,KAAJ,aAAIA,KAAJ,eAAIA,KAAK,CAAES,KAAX,EAAkB;AAChBJ,IAAAA,cAAc;AACf;;AAED,QAAM;AAAA,OAACK,IAAD;AAAA,OAAOC;AAAP,MAAkBjB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM;AAAA,OAACkB,MAAD;AAAA,OAASC;AAAT,MAAsBnB,QAAQ,CAAC,KAAD,CAApC;;AACA,QAAMoB,WAAW,GAAG,MAAM;AACxBH,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAHD;;AAIA,QAAME,aAAa,GAAG,MAAM;AAC1BJ,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAE,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAHD;;AAIA,sBACE;AAAA,eACGH,IAAI,iBACH;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAEK,aAFX;AAGE,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAE,OAAnB;AAA4BC,UAAAA,KAAK,EAAE;AAAnC,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBAFJ,EAaGL,MAAM,iBACL;AAAA,8BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAEE,WAFX;AAGE,QAAA,KAAK,EAAE;AAAEE,UAAAA,eAAe,EAAE,OAAnB;AAA4BC,UAAAA,KAAK,EAAE;AAAnC,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBAdJ,eAyBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD","sourcesContent":["import { useMutation } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport { useState } from 'react';\r\nimport Footer from '../components/Footer';\r\nimport RequestReset from '../components/RequestReset';\r\nimport SignIn from '../components/SignIn';\r\n\r\nconst UPDATE_USER_MUTATION = gql`\r\n  mutation UPDATE_USER_MUTATION($id: ID!) {\r\n    updateUser(where: { id: $id }, data: { confirmed: \"yes\" }) {\r\n      confirmed\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function SignInPage({ query }) {\r\n  const [updateUser, { data, error, loading }] =\r\n    useMutation(UPDATE_USER_MUTATION);\r\n\r\n  async function updateUserFunc() {\r\n    const res = await updateUser({\r\n      variables: {\r\n        id: query.token,\r\n      },\r\n    });\r\n  }\r\n  if (query?.token) {\r\n    updateUserFunc();\r\n  }\r\n\r\n  const [sign, setSign] = useState(true);\r\n  const [forgot, setForgot] = useState(false);\r\n  const signHandler = () => {\r\n    setSign(true);\r\n    setForgot(false);\r\n  };\r\n  const forgotHandler = () => {\r\n    setSign(false);\r\n    setForgot(true);\r\n  };\r\n  return (\r\n    <div>\r\n      {sign && (\r\n        <>\r\n          <SignIn />\r\n          <button\r\n            type=\"button\"\r\n            onClick={forgotHandler}\r\n            style={{ backgroundColor: 'white', color: 'red' }}\r\n          >\r\n            Forgot Password! ðŸ™ƒ\r\n          </button>\r\n        </>\r\n      )}\r\n      {forgot && (\r\n        <>\r\n          <RequestReset />\r\n          <button\r\n            type=\"button\"\r\n            onClick={signHandler}\r\n            style={{ backgroundColor: 'white', color: 'red' }}\r\n          >\r\n            Back to Sign In! ðŸ‘ˆ\r\n          </button>\r\n        </>\r\n      )}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}