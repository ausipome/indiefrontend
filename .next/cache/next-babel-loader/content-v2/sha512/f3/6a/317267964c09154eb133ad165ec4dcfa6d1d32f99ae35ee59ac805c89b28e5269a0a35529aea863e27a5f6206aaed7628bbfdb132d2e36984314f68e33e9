{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/User/Documents/indieBubba/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/User/Documents/indieBubba/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\indieBubba\\\\frontend\\\\components\\\\Refund.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation REFUND_MUTATION($id: ID!) {\\n    refund(id: $id) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport DisplayError from './ErrorMessage';\nimport { ALL_PRODUCTS_QUERY_SOLD } from './ProductsSold';\nvar ButtonStyles = styled.button.withConfig({\n  displayName: \"Refund__ButtonStyles\",\n  componentId: \"sc-1rf4kq1-0\"\n})([\"width:auto;background:white;color:red;border:thin solid #000000;font-size:1.2em;font-weight:600;padding:0.5rem 1.2rem;margin-right:7px;\"]);\n_c = ButtonStyles;\nvar REFUND_MUTATION = gql(_templateObject());\nexport default function Refund(_ref) {\n  _s();\n\n  var id = _ref.id,\n      children = _ref.children;\n\n  var _useMutation = useMutation(REFUND_MUTATION, {\n    variables: {\n      id: id\n    },\n    refetchQueries: [{\n      query: ALL_PRODUCTS_QUERY_SOLD\n    }, 'ALL_PRODUCTS_QUERY_SOLD']\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      refund = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  return /*#__PURE__*/_jsxDEV(ButtonStyles, {\n    style: {\n      fontSize: '1.2em',\n      marginTop: '12px'\n    },\n    type: \"button\",\n    disabled: loading,\n    onClick: function onClick() {\n      if (confirm('Please confirm you wish to refund this item?\\n\\nTHIS CAN NOT BE UNDONE!')) {\n        refund()[\"catch\"](function (err) {\n          return alert(err.message);\n        });\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Refund, \"RiIpsfocc70PRacp/CcKRJiLgyU=\", false, function () {\n  return [useMutation];\n});\n\n_c2 = Refund;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ButtonStyles\");\n$RefreshReg$(_c2, \"Refund\");","map":{"version":3,"sources":["C:/Users/User/Documents/indieBubba/frontend/components/Refund.js"],"names":["useMutation","gql","styled","DisplayError","ALL_PRODUCTS_QUERY_SOLD","ButtonStyles","button","REFUND_MUTATION","Refund","id","children","variables","refetchQueries","query","refund","loading","error","fontSize","marginTop","confirm","err","alert","message"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,uBAAT,QAAwC,gBAAxC;AAEA,IAAMC,YAAY,GAAGH,MAAM,CAACI,MAAV;AAAA;AAAA;AAAA,+IAAlB;KAAMD,Y;AAWN,IAAME,eAAe,GAAGN,GAAH,mBAArB;AAOA,eAAe,SAASO,MAAT,OAAkC;AAAA;;AAAA,MAAhBC,EAAgB,QAAhBA,EAAgB;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,qBACVV,WAAW,CAACO,eAAD,EAAkB;AAChEI,IAAAA,SAAS,EAAE;AAAEF,MAAAA,EAAE,EAAFA;AAAF,KADqD;AAEhEG,IAAAA,cAAc,EAAE,CACd;AAAEC,MAAAA,KAAK,EAAET;AAAT,KADc,EAEd,yBAFc;AAFgD,GAAlB,CADD;AAAA;AAAA,MACxCU,MADwC;AAAA;AAAA,MAC9BC,OAD8B,kBAC9BA,OAD8B;AAAA,MACrBC,KADqB,kBACrBA,KADqB;;AAQ/C,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,OADL;AAELC,MAAAA,SAAS,EAAE;AAFN,KADT;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,QAAQ,EAAEH,OANZ;AAOE,IAAA,OAAO,EAAE,mBAAM;AACb,UACEI,OAAO,CACL,yEADK,CADT,EAIE;AACAL,QAAAA,MAAM,WAAN,CAAe,UAACM,GAAD;AAAA,iBAASC,KAAK,CAACD,GAAG,CAACE,OAAL,CAAd;AAAA,SAAf;AACD;AACF,KAfH;AAAA,cAiBGZ;AAjBH;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA7BuBF,M;UACeR,W;;;MADfQ,M","sourcesContent":["import { useMutation } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport styled from 'styled-components';\r\nimport DisplayError from './ErrorMessage';\r\nimport { ALL_PRODUCTS_QUERY_SOLD } from './ProductsSold';\r\n\r\nconst ButtonStyles = styled.button`\r\n  width: auto;\r\n  background: white;\r\n  color: red;\r\n  border: thin solid #000000;\r\n  font-size: 1.2em;\r\n  font-weight: 600;\r\n  padding: 0.5rem 1.2rem;\r\n  margin-right: 7px;\r\n`;\r\n\r\nconst REFUND_MUTATION = gql`\r\n  mutation REFUND_MUTATION($id: ID!) {\r\n    refund(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\nexport default function Refund({ id, children }) {\r\n  const [refund, { loading, error }] = useMutation(REFUND_MUTATION, {\r\n    variables: { id },\r\n    refetchQueries: [\r\n      { query: ALL_PRODUCTS_QUERY_SOLD },\r\n      'ALL_PRODUCTS_QUERY_SOLD',\r\n    ],\r\n  });\r\n  return (\r\n    <ButtonStyles\r\n      style={{\r\n        fontSize: '1.2em',\r\n        marginTop: '12px',\r\n      }}\r\n      type=\"button\"\r\n      disabled={loading}\r\n      onClick={() => {\r\n        if (\r\n          confirm(\r\n            'Please confirm you wish to refund this item?\\n\\nTHIS CAN NOT BE UNDONE!'\r\n          )\r\n        ) {\r\n          refund().catch((err) => alert(err.message));\r\n        }\r\n      }}\r\n    >\r\n      {children}\r\n    </ButtonStyles>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}