{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\indieBubba\\\\frontend\\\\components\\\\Checkout.js\";\nimport styled from 'styled-components';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { useState } from 'react';\nimport nProgress from 'nprogress';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport { Router, useRouter } from 'next/dist/client/router';\nimport SickButton from './styles/SickButton';\nimport { useCart } from '../lib/cartState';\nimport { CURRENT_USER_QUERY } from './User';\nimport { USER_ORDERS_QUERY } from '../pages/orders';\nimport { ALL_PRODUCTS_QUERY } from './Products';\nimport { PAGINATION_QUERY } from './Pagination';\nimport LoadBar from './LoadBar';\nconst CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-1n7g75y-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\nconst CREATE_ORDER_MUTATION = gql`\n  mutation CREATE_ORDER_MUTATION($token: String!) {\n    checkout(token: $token) {\n      id\n      charge\n      total\n      items {\n        id\n        name\n      }\n    }\n  }\n`;\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const router = useRouter();\n  const {\n    closeCart\n  } = useCart();\n  const [checkout, {\n    error: graphQLError\n  }] = useMutation(CREATE_ORDER_MUTATION, {\n    refetchQueries: [{\n      query: USER_ORDERS_QUERY\n    }, 'USER_ORDERS_QUERY', {\n      query: CURRENT_USER_QUERY\n    }, 'CURRENT_USER_QUERY', {\n      query: ALL_PRODUCTS_QUERY\n    }, 'ALL_PRODUCTS_QUERY', {\n      query: PAGINATION_QUERY\n    }, 'PAGINATION_QUERY']\n  });\n\n  async function handleSubmit(e) {\n    // 1. Stop the form from submitting and turn the loader one\n    e.preventDefault();\n    setLoading(true); // 2. Start the page transition\n\n    nProgress.start(); // 3. Create the payment method via stripe (Token comes back here if successful)\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    }); // 4. Handle any errors from stripe\n\n    if (error) {\n      setError(error);\n      nProgress.done();\n      setLoading(false);\n      return; // stops the checkout from happening\n    } // 5. Send the token from step 3 to our keystone server, via a custom mutation!\n\n\n    const order = await checkout({\n      variables: {\n        token: paymentMethod.id\n      }\n    }); // 6. Change the page to view the order\n\n    router.push({\n      pathname: `/order/[id]`,\n      query: {\n        id: order.data.checkout.id\n      }\n    }); // 7. Close the cart\n\n    closeCart(); // 8. turn the loader off\n\n    setLoading(false);\n    nProgress.done();\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(LoadBar, {\n      load: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 12\n      },\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this), graphQLError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 12\n      },\n      children: graphQLError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SickButton, {\n      className: \"nounderline\",\n      children: \"Check Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n\nexport { Checkout };","map":{"version":3,"sources":["C:/Users/User/Documents/indieBubba/frontend/components/Checkout.js"],"names":["styled","loadStripe","CardElement","Elements","useElements","useStripe","useState","nProgress","gql","useMutation","Router","useRouter","SickButton","useCart","CURRENT_USER_QUERY","USER_ORDERS_QUERY","ALL_PRODUCTS_QUERY","PAGINATION_QUERY","LoadBar","CheckoutFormStyles","form","CREATE_ORDER_MUTATION","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","stripe","elements","router","closeCart","checkout","graphQLError","refetchQueries","query","handleSubmit","e","preventDefault","start","paymentMethod","createPaymentMethod","type","card","getElement","done","order","variables","token","id","push","pathname","data","fontSize","message","Checkout"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport {\r\n  CardElement,\r\n  Elements,\r\n  useElements,\r\n  useStripe,\r\n} from '@stripe/react-stripe-js';\r\nimport { useState } from 'react';\r\nimport nProgress from 'nprogress';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/client';\r\nimport { Router, useRouter } from 'next/dist/client/router';\r\nimport SickButton from './styles/SickButton';\r\nimport { useCart } from '../lib/cartState';\r\nimport { CURRENT_USER_QUERY } from './User';\r\nimport { USER_ORDERS_QUERY } from '../pages/orders';\r\nimport { ALL_PRODUCTS_QUERY } from './Products';\r\nimport { PAGINATION_QUERY } from './Pagination';\r\nimport LoadBar from './LoadBar';\r\n\r\nconst CheckoutFormStyles = styled.form`\r\n  box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\r\n  border: 1px solid rgba(0, 0, 0, 0.06);\r\n  border-radius: 5px;\r\n  padding: 1rem;\r\n  display: grid;\r\n  grid-gap: 1rem;\r\n`;\r\n\r\nconst CREATE_ORDER_MUTATION = gql`\r\n  mutation CREATE_ORDER_MUTATION($token: String!) {\r\n    checkout(token: $token) {\r\n      id\r\n      charge\r\n      total\r\n      items {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\r\n\r\nfunction CheckoutForm() {\r\n  const [error, setError] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const router = useRouter();\r\n  const { closeCart } = useCart();\r\n  const [checkout, { error: graphQLError }] = useMutation(\r\n    CREATE_ORDER_MUTATION,\r\n    {\r\n      refetchQueries: [\r\n        { query: USER_ORDERS_QUERY },\r\n        'USER_ORDERS_QUERY',\r\n        { query: CURRENT_USER_QUERY },\r\n        'CURRENT_USER_QUERY',\r\n        { query: ALL_PRODUCTS_QUERY },\r\n        'ALL_PRODUCTS_QUERY',\r\n        { query: PAGINATION_QUERY },\r\n        'PAGINATION_QUERY',\r\n      ],\r\n    }\r\n  );\r\n  async function handleSubmit(e) {\r\n    // 1. Stop the form from submitting and turn the loader one\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    // 2. Start the page transition\r\n    nProgress.start();\r\n    // 3. Create the payment method via stripe (Token comes back here if successful)\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: elements.getElement(CardElement),\r\n    });\r\n    // 4. Handle any errors from stripe\r\n    if (error) {\r\n      setError(error);\r\n      nProgress.done();\r\n      setLoading(false);\r\n      return; // stops the checkout from happening\r\n    }\r\n    // 5. Send the token from step 3 to our keystone server, via a custom mutation!\r\n    const order = await checkout({\r\n      variables: {\r\n        token: paymentMethod.id,\r\n      },\r\n    });\r\n    // 6. Change the page to view the order\r\n    router.push({\r\n      pathname: `/order/[id]`,\r\n      query: {\r\n        id: order.data.checkout.id,\r\n      },\r\n    });\r\n    // 7. Close the cart\r\n    closeCart();\r\n\r\n    // 8. turn the loader off\r\n    setLoading(false);\r\n    nProgress.done();\r\n  }\r\n\r\n  return (\r\n    <CheckoutFormStyles onSubmit={handleSubmit}>\r\n      <LoadBar load={loading} />\r\n      {error && <p style={{ fontSize: 12 }}>{error.message}</p>}\r\n      {graphQLError && <p style={{ fontSize: 12 }}>{graphQLError.message}</p>}\r\n      <CardElement />\r\n      <SickButton className=\"nounderline\">Check Out</SickButton>\r\n    </CheckoutFormStyles>\r\n  );\r\n}\r\n\r\nfunction Checkout() {\r\n  return (\r\n    <Elements stripe={stripeLib}>\r\n      <CheckoutForm />\r\n    </Elements>\r\n  );\r\n}\r\n\r\nexport { Checkout };\r\n"]},"metadata":{},"sourceType":"module"}