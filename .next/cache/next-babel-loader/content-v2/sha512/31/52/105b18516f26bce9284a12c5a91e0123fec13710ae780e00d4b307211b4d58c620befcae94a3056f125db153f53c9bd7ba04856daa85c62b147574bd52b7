{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"C:/Users/User/Documents/indieBubba/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\indieBubba\\\\frontend\\\\components\\\\Products.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\\n    products(\\n      where: { status: { equals: \\\"AVAILABLE\\\" } }\\n      orderBy: [{ description: asc }]\\n      take: $first\\n      skip: $skip\\n    ) {\\n      id\\n      name\\n      price\\n      description\\n      condition\\n      photo {\\n        id\\n        image {\\n          publicUrlTransformed\\n        }\\n      }\\n      user {\\n        id\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport { perPage } from '../config';\nimport LoadBar from './LoadBar';\nimport Product from './Product';\nexport var ALL_PRODUCTS_QUERY = gql(_templateObject());\nvar ProductsListStyles = styled.div.withConfig({\n  displayName: \"Products__ProductsListStyles\",\n  componentId: \"sc-gnipd4-0\"\n})([\"margin:0 auto;width:90%;display:grid;column-gap:25px;row-gap:25px;@media (min-width:600px){column-gap:10%;row-gap:2%;grid-template-columns:40% 40%;margin-bottom:65px;}@media (min-width:900px){margin-top:1%;width:80%;column-gap:7%;row-gap:4%;grid-template-columns:30% 30% 30%;}\"]);\n_c = ProductsListStyles;\nexport default function Products(_ref) {\n  _s();\n\n  var _this = this;\n\n  var page = _ref.page;\n\n  var _useQuery = useQuery(ALL_PRODUCTS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadBar, {\n    load: loading\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProductsListStyles, {\n      children: data.products.map(function (product) {\n        return /*#__PURE__*/_jsxDEV(Product, {\n          product: product,\n          pageType: \"Products\"\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Products, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = Products;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProductsListStyles\");\n$RefreshReg$(_c2, \"Products\");","map":{"version":3,"sources":["C:/Users/User/Documents/indieBubba/frontend/components/Products.js"],"names":["useQuery","gql","styled","perPage","LoadBar","Product","ALL_PRODUCTS_QUERY","ProductsListStyles","div","Products","page","variables","skip","first","data","error","loading","message","products","map","product","id"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,IAAMC,kBAAkB,GAAGL,GAAH,mBAAxB;AA0BP,IAAMM,kBAAkB,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,4RAAxB;KAAMD,kB;AAqBN,eAAe,SAASE,QAAT,OAA4B;AAAA;;AAAA;;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAAA,kBACRV,QAAQ,CAACM,kBAAD,EAAqB;AAC5DK,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAEF,IAAI,GAAGP,OAAP,GAAiBA,OADd;AAETU,MAAAA,KAAK,EAAEV;AAFE;AADiD,GAArB,CADA;AAAA,MACjCW,IADiC,aACjCA,IADiC;AAAA,MAC3BC,KAD2B,aAC3BA,KAD2B;AAAA,MACpBC,OADoB,aACpBA,OADoB;;AAOzC,MAAIA,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAS,IAAA,IAAI,EAAEA;AAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACE;AAAA,2BACE,QAAC,kBAAD;AAAA,gBACGH,IAAI,CAACI,QAAL,CAAcC,GAAd,CAAkB,UAACC,OAAD;AAAA,4BACjB,QAAC,OAAD;AAA0B,UAAA,OAAO,EAAEA,OAAnC;AAA4C,UAAA,QAAQ,EAAC;AAArD,WAAcA,OAAO,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,iBADiB;AAAA,OAAlB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAlBuBZ,Q;UACWT,Q;;;MADXS,Q","sourcesContent":["import { useQuery } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport styled from 'styled-components';\r\nimport { perPage } from '../config';\r\nimport LoadBar from './LoadBar';\r\nimport Product from './Product';\r\n\r\nexport const ALL_PRODUCTS_QUERY = gql`\r\n  query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\r\n    products(\r\n      where: { status: { equals: \"AVAILABLE\" } }\r\n      orderBy: [{ description: asc }]\r\n      take: $first\r\n      skip: $skip\r\n    ) {\r\n      id\r\n      name\r\n      price\r\n      description\r\n      condition\r\n      photo {\r\n        id\r\n        image {\r\n          publicUrlTransformed\r\n        }\r\n      }\r\n      user {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ProductsListStyles = styled.div`\r\n  margin: 0 auto;\r\n  width: 90%;\r\n  display: grid;\r\n  column-gap: 25px;\r\n  row-gap: 25px;\r\n  @media (min-width: 600px) {\r\n    column-gap: 10%;\r\n    row-gap: 2%;\r\n    grid-template-columns: 40% 40%;\r\n    margin-bottom: 65px;\r\n  }\r\n  @media (min-width: 900px) {\r\n    margin-top: 1%;\r\n    width: 80%;\r\n    column-gap: 7%;\r\n    row-gap: 4%;\r\n    grid-template-columns: 30% 30% 30%;\r\n  }\r\n`;\r\n\r\nexport default function Products({ page }) {\r\n  const { data, error, loading } = useQuery(ALL_PRODUCTS_QUERY, {\r\n    variables: {\r\n      skip: page * perPage - perPage,\r\n      first: perPage,\r\n    },\r\n  });\r\n  if (loading) return <LoadBar load={loading} />;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n  return (\r\n    <div>\r\n      <ProductsListStyles>\r\n        {data.products.map((product) => (\r\n          <Product key={product.id} product={product} pageType=\"Products\" />\r\n        ))}\r\n      </ProductsListStyles>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}