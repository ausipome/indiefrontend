{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/User/Documents/indieBubba/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"C:/Users/User/Documents/indieBubba/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/User/Documents/indieBubba/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/User/Documents/indieBubba/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\indieBubba\\\\frontend\\\\pages\\\\SignIn.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UPDATE_USER_MUTATION($id: ID!) {\\n    updateUser(where: { id: $id }, data: { confirmed: \\\"yes\\\" }) {\\n      confirmed\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useState } from 'react';\nimport Footer from '../components/Footer';\nimport RequestReset from '../components/RequestReset';\nimport SignIn from '../components/SignIn';\nvar UPDATE_USER_MUTATION = gql(_templateObject());\nexport default function SignInPage(_ref) {\n  _s();\n\n  var query = _ref.query;\n\n  var _useMutation = useMutation(UPDATE_USER_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      updateUser = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      error = _useMutation2$.error,\n      loading = _useMutation2$.loading;\n\n  function updateUserFunc() {\n    return _updateUserFunc.apply(this, arguments);\n  }\n\n  function _updateUserFunc() {\n    _updateUserFunc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return updateUser({\n                variables: {\n                  id: query.token\n                }\n              });\n\n            case 2:\n              res = _context.sent;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _updateUserFunc.apply(this, arguments);\n  }\n\n  if (query !== null && query !== void 0 && query.token) {\n    updateUserFunc();\n  }\n\n  var _useState = useState(true),\n      sign = _useState[0],\n      setSign = _useState[1];\n\n  var _useState2 = useState(false),\n      forgot = _useState2[0],\n      setForgot = _useState2[1];\n\n  var signHandler = function signHandler() {\n    setSign(true);\n    setForgot(false);\n  };\n\n  var forgotHandler = function forgotHandler() {\n    setSign(false);\n    setForgot(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [sign && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: forgotHandler,\n        style: {\n          backgroundColor: 'white',\n          color: 'red'\n        },\n        children: \"Forgot Password! \\uD83D\\uDE43\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), forgot && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(RequestReset, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: signHandler,\n        style: {\n          backgroundColor: 'white',\n          color: 'red'\n        },\n        children: \"Back to Sign In! \\uD83D\\uDC48\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignInPage, \"AMiovidsw2taisXM/xveGy13opc=\", false, function () {\n  return [useMutation];\n});\n\n_c = SignInPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInPage\");","map":{"version":3,"sources":["C:/Users/User/Documents/indieBubba/frontend/pages/SignIn.js"],"names":["useMutation","gql","useState","Footer","RequestReset","SignIn","UPDATE_USER_MUTATION","SignInPage","query","updateUser","data","error","loading","updateUserFunc","variables","id","token","res","sign","setSign","forgot","setForgot","signHandler","forgotHandler","backgroundColor","color"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,IAAMC,oBAAoB,GAAGL,GAAH,mBAA1B;AAQA,eAAe,SAASM,UAAT,OAA+B;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;;AAAA,qBAE1CR,WAAW,CAACM,oBAAD,CAF+B;AAAA;AAAA,MACrCG,UADqC;AAAA;AAAA,MACvBC,IADuB,kBACvBA,IADuB;AAAA,MACjBC,KADiB,kBACjBA,KADiB;AAAA,MACVC,OADU,kBACVA,OADU;;AAAA,WAI7BC,cAJ6B;AAAA;AAAA;;AAAA;AAAA,+EAI5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACoBJ,UAAU,CAAC;AAC3BK,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,EAAE,EAAEP,KAAK,CAACQ;AADD;AADgB,eAAD,CAD9B;;AAAA;AACQC,cAAAA,GADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJ4C;AAAA;AAAA;;AAW5C,MAAIT,KAAJ,aAAIA,KAAJ,eAAIA,KAAK,CAAEQ,KAAX,EAAkB;AAChBH,IAAAA,cAAc;AACf;;AAb2C,kBAepBX,QAAQ,CAAC,IAAD,CAfY;AAAA,MAerCgB,IAfqC;AAAA,MAe/BC,OAf+B;;AAAA,mBAgBhBjB,QAAQ,CAAC,KAAD,CAhBQ;AAAA,MAgBrCkB,MAhBqC;AAAA,MAgB7BC,SAhB6B;;AAiB5C,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBH,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAHD;;AAIA,MAAME,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BJ,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAE,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAHD;;AAIA,sBACE;AAAA,eACGH,IAAI,iBACH;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAEK,aAFX;AAGE,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAE,OAAnB;AAA4BC,UAAAA,KAAK,EAAE;AAAnC,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBAFJ,EAaGL,MAAM,iBACL;AAAA,8BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAEE,WAFX;AAGE,QAAA,KAAK,EAAE;AAAEE,UAAAA,eAAe,EAAE,OAAnB;AAA4BC,UAAAA,KAAK,EAAE;AAAnC,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBAdJ,eAyBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GAtDuBlB,U;UAEpBP,W;;;KAFoBO,U","sourcesContent":["import { useMutation } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport { useState } from 'react';\r\nimport Footer from '../components/Footer';\r\nimport RequestReset from '../components/RequestReset';\r\nimport SignIn from '../components/SignIn';\r\n\r\nconst UPDATE_USER_MUTATION = gql`\r\n  mutation UPDATE_USER_MUTATION($id: ID!) {\r\n    updateUser(where: { id: $id }, data: { confirmed: \"yes\" }) {\r\n      confirmed\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function SignInPage({ query }) {\r\n  const [updateUser, { data, error, loading }] =\r\n    useMutation(UPDATE_USER_MUTATION);\r\n\r\n  async function updateUserFunc() {\r\n    const res = await updateUser({\r\n      variables: {\r\n        id: query.token,\r\n      },\r\n    });\r\n  }\r\n  if (query?.token) {\r\n    updateUserFunc();\r\n  }\r\n\r\n  const [sign, setSign] = useState(true);\r\n  const [forgot, setForgot] = useState(false);\r\n  const signHandler = () => {\r\n    setSign(true);\r\n    setForgot(false);\r\n  };\r\n  const forgotHandler = () => {\r\n    setSign(false);\r\n    setForgot(true);\r\n  };\r\n  return (\r\n    <div>\r\n      {sign && (\r\n        <>\r\n          <SignIn />\r\n          <button\r\n            type=\"button\"\r\n            onClick={forgotHandler}\r\n            style={{ backgroundColor: 'white', color: 'red' }}\r\n          >\r\n            Forgot Password! ðŸ™ƒ\r\n          </button>\r\n        </>\r\n      )}\r\n      {forgot && (\r\n        <>\r\n          <RequestReset />\r\n          <button\r\n            type=\"button\"\r\n            onClick={signHandler}\r\n            style={{ backgroundColor: 'white', color: 'red' }}\r\n          >\r\n            Back to Sign In! ðŸ‘ˆ\r\n          </button>\r\n        </>\r\n      )}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}