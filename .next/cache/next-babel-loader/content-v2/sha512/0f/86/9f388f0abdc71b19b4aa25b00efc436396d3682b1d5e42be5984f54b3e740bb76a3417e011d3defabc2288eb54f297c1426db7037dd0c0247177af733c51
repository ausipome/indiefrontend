{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\indieBubba\\\\frontend\\\\components\\\\SignIn.js\";\nimport gql from 'graphql-tag';\nimport { ApolloConsumer, useMutation } from '@apollo/client';\nimport { useState } from 'react';\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport { CURRENT_USER_QUERY, useUser } from './User';\nimport Error from './ErrorMessage';\nconst SIGN_OUT_MUTATION_NEXT = gql`\n  mutation {\n    endSession\n  }\n`;\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    authenticateUserWithPassword(email: $email, password: $password) {\n      ... on UserAuthenticationWithPasswordSuccess {\n        item {\n          id\n          email\n          name\n          confirmed\n        }\n      }\n      ... on UserAuthenticationWithPasswordFailure {\n        message\n      }\n    }\n  }\n`;\nexport default function SignIn() {\n  const {\n    0: signState,\n    1: setSignState\n  } = useState(false);\n  const user = useUser();\n  const [signout] = useMutation(SIGN_OUT_MUTATION_NEXT, {\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  });\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm({\n    email: '',\n    password: ''\n  });\n  const [signin, {\n    data,\n    loading\n  }] = useMutation(SIGNIN_MUTATION, {\n    variables: inputs,\n\n    async onCompleted(data) {\n      var _data$authenticateUse, _data$authenticateUse2;\n\n      const emailCheck = data === null || data === void 0 ? void 0 : (_data$authenticateUse = data.authenticateUserWithPassword) === null || _data$authenticateUse === void 0 ? void 0 : (_data$authenticateUse2 = _data$authenticateUse.item) === null || _data$authenticateUse2 === void 0 ? void 0 : _data$authenticateUse2.confirmed;\n\n      if (emailCheck === 'no') {\n        signout();\n        document.getElementById('logMessage').innerHTML = 'Please confirm your email address to continue to use all of Indie Bubbaâ€™s features! ';\n      }\n    }\n\n  });\n  const error = (data === null || data === void 0 ? void 0 : data.authenticateUserWithPassword.__typename) === 'UserAuthenticationWithPasswordFailure' ? data === null || data === void 0 ? void 0 : data.authenticateUserWithPassword : undefined;\n\n  async function handleSubmit(e) {\n    var _res$data, _res$data$authenticat, _res$data$authenticat2;\n\n    document.getElementById('logMessage').innerHTML = '';\n    e.preventDefault(); // stop the form from submitting\n\n    const res = await signin();\n\n    if (((_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$authenticat = _res$data.authenticateUserWithPassword) === null || _res$data$authenticat === void 0 ? void 0 : (_res$data$authenticat2 = _res$data$authenticat.item) === null || _res$data$authenticat2 === void 0 ? void 0 : _res$data$authenticat2.confirmed) === 'yes') {\n      setSignState(true);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [signState && /*#__PURE__*/_jsxDEV(ApolloConsumer, {\n      children: client => {\n        client.refetchQueries({\n          include: [CURRENT_USER_QUERY]\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      method: \"POST\",\n      onSubmit: handleSubmit,\n      children: [user && /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: 'red',\n          textAlign: 'center',\n          fontWeight: 'normal'\n        },\n        children: [\"Welcome back \", user.name, \" \\uD83D\\uDE0A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login to Your Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: 'red',\n          textAlign: 'center',\n          fontWeight: 'normal'\n        },\n        id: \"logMessage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Error, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        disabled: loading,\n        \"aria-busy\": loading,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Your Email Address\",\n            autoComplete: \"email\",\n            value: inputs.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Password\",\n            autoComplete: \"off\",\n            value: inputs.password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["C:/Users/User/Documents/indieBubba/frontend/components/SignIn.js"],"names":["gql","ApolloConsumer","useMutation","useState","Form","useForm","CURRENT_USER_QUERY","useUser","Error","SIGN_OUT_MUTATION_NEXT","SIGNIN_MUTATION","SignIn","signState","setSignState","user","signout","refetchQueries","query","inputs","handleChange","resetForm","email","password","signin","data","loading","variables","onCompleted","emailCheck","authenticateUserWithPassword","item","confirmed","document","getElementById","innerHTML","error","__typename","undefined","handleSubmit","e","preventDefault","res","client","include","color","textAlign","fontWeight","name"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\r\nimport { ApolloConsumer, useMutation } from '@apollo/client';\r\nimport { useState } from 'react';\r\nimport Form from './styles/Form';\r\nimport useForm from '../lib/useForm';\r\nimport { CURRENT_USER_QUERY, useUser } from './User';\r\nimport Error from './ErrorMessage';\r\n\r\nconst SIGN_OUT_MUTATION_NEXT = gql`\r\n  mutation {\r\n    endSession\r\n  }\r\n`;\r\n\r\nconst SIGNIN_MUTATION = gql`\r\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\r\n    authenticateUserWithPassword(email: $email, password: $password) {\r\n      ... on UserAuthenticationWithPasswordSuccess {\r\n        item {\r\n          id\r\n          email\r\n          name\r\n          confirmed\r\n        }\r\n      }\r\n      ... on UserAuthenticationWithPasswordFailure {\r\n        message\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function SignIn() {\r\n  const [signState, setSignState] = useState(false);\r\n  const user = useUser();\r\n\r\n  const [signout] = useMutation(SIGN_OUT_MUTATION_NEXT, {\r\n    refetchQueries: [{ query: CURRENT_USER_QUERY }],\r\n  });\r\n\r\n  const { inputs, handleChange, resetForm } = useForm({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [signin, { data, loading }] = useMutation(SIGNIN_MUTATION, {\r\n    variables: inputs,\r\n    async onCompleted(data) {\r\n      const emailCheck = data?.authenticateUserWithPassword?.item?.confirmed;\r\n      if (emailCheck === 'no') {\r\n        signout();\r\n        document.getElementById('logMessage').innerHTML =\r\n          'Please confirm your email address to continue to use all of Indie Bubbaâ€™s features! ';\r\n      }\r\n    },\r\n  });\r\n  const error =\r\n    data?.authenticateUserWithPassword.__typename ===\r\n    'UserAuthenticationWithPasswordFailure'\r\n      ? data?.authenticateUserWithPassword\r\n      : undefined;\r\n\r\n  async function handleSubmit(e) {\r\n    document.getElementById('logMessage').innerHTML = '';\r\n    e.preventDefault(); // stop the form from submitting\r\n    const res = await signin();\r\n    if (res.data?.authenticateUserWithPassword?.item?.confirmed === 'yes') {\r\n      setSignState(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {signState && (\r\n        <ApolloConsumer>\r\n          {(client) => {\r\n            client.refetchQueries({\r\n              include: [CURRENT_USER_QUERY],\r\n            });\r\n          }}\r\n        </ApolloConsumer>\r\n      )}\r\n      <Form method=\"POST\" onSubmit={handleSubmit}>\r\n        {user && (\r\n          <h2\r\n            style={{ color: 'red', textAlign: 'center', fontWeight: 'normal' }}\r\n          >\r\n            Welcome back {user.name} ðŸ˜Š\r\n          </h2>\r\n        )}\r\n        <h2>Login to Your Account</h2>\r\n        <h2\r\n          style={{ color: 'red', textAlign: 'center', fontWeight: 'normal' }}\r\n          id=\"logMessage\"\r\n        />\r\n        <Error error={error} />\r\n        <fieldset disabled={loading} aria-busy={loading}>\r\n          <label htmlFor=\"email\">\r\n            Email\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Your Email Address\"\r\n              autoComplete=\"email\"\r\n              value={inputs.email}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <label htmlFor=\"password\">\r\n            Password\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              autoComplete=\"off\"\r\n              value={inputs.password}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Login</button>\r\n        </fieldset>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}