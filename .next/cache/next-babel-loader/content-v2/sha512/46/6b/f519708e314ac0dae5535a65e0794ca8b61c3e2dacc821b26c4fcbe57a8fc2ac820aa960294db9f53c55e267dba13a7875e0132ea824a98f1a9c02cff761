{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\indieBubba\\\\frontend\\\\components\\\\Released.js\";\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport DisplayError from './ErrorMessage';\nimport { ALL_PRODUCTS_QUERY_SOLD } from './ProductsSold';\nconst ButtonStyles = styled.button.withConfig({\n  displayName: \"Released__ButtonStyles\",\n  componentId: \"sc-1lq5j2-0\"\n})([\"width:auto;background:white;color:green;border:thin solid #000000;font-size:1.2em;font-weight:600;padding:0.5rem 1.2rem;margin-right:7px;\"]);\nconst RELEASE_MUTATION = gql`\n  mutation RELEASE_MUTATION($id: ID!) {\n    released(id: $id) {\n      id\n    }\n  }\n`;\nexport default function Released({\n  id,\n  children\n}) {\n  const [released, {\n    loading,\n    error\n  }] = useMutation(RELEASE_MUTATION, {\n    variables: {\n      id\n    },\n    refetchQueries: [{\n      query: ALL_PRODUCTS_QUERY_SOLD\n    }, 'ALL_PRODUCTS_QUERY_SOLD']\n  });\n  return /*#__PURE__*/_jsxDEV(ButtonStyles, {\n    style: {\n      fontSize: '1.2em',\n      marginTop: '12px'\n    },\n    type: \"button\",\n    disabled: loading,\n    onClick: () => {\n      if (confirm('You are about to release the funds for this item into your Indie Bubba account.\\n\\nThe funds will then be paid out to your nominated bank account and arrive in the next few days.')) {\n        released().catch(err => alert(err.message));\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/User/Documents/indieBubba/frontend/components/Released.js"],"names":["useMutation","gql","styled","DisplayError","ALL_PRODUCTS_QUERY_SOLD","ButtonStyles","button","RELEASE_MUTATION","Released","id","children","released","loading","error","variables","refetchQueries","query","fontSize","marginTop","confirm","catch","err","alert","message"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,uBAAT,QAAwC,gBAAxC;AAEA,MAAMC,YAAY,GAAGH,MAAM,CAACI,MAAV;AAAA;AAAA;AAAA,iJAAlB;AAWA,MAAMC,gBAAgB,GAAGN,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,CANA;AAOA,eAAe,SAASO,QAAT,CAAkB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAlB,EAAoC;AACjD,QAAM,CAACC,QAAD,EAAW;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAX,IAAiCb,WAAW,CAACO,gBAAD,EAAmB;AACnEO,IAAAA,SAAS,EAAE;AAAEL,MAAAA;AAAF,KADwD;AAEnEM,IAAAA,cAAc,EAAE,CACd;AAAEC,MAAAA,KAAK,EAAEZ;AAAT,KADc,EAEd,yBAFc;AAFmD,GAAnB,CAAlD;AAOA,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAE;AACLa,MAAAA,QAAQ,EAAE,OADL;AAELC,MAAAA,SAAS,EAAE;AAFN,KADT;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,QAAQ,EAAEN,OANZ;AAOE,IAAA,OAAO,EAAE,MAAM;AACb,UACEO,OAAO,CACL,oLADK,CADT,EAIE;AACAR,QAAAA,QAAQ,GAAGS,KAAX,CAAkBC,GAAD,IAASC,KAAK,CAACD,GAAG,CAACE,OAAL,CAA/B;AACD;AACF,KAfH;AAAA,cAiBGb;AAjBH;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD","sourcesContent":["import { useMutation } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport styled from 'styled-components';\r\nimport DisplayError from './ErrorMessage';\r\nimport { ALL_PRODUCTS_QUERY_SOLD } from './ProductsSold';\r\n\r\nconst ButtonStyles = styled.button`\r\n  width: auto;\r\n  background: white;\r\n  color: green;\r\n  border: thin solid #000000;\r\n  font-size: 1.2em;\r\n  font-weight: 600;\r\n  padding: 0.5rem 1.2rem;\r\n  margin-right: 7px;\r\n`;\r\n\r\nconst RELEASE_MUTATION = gql`\r\n  mutation RELEASE_MUTATION($id: ID!) {\r\n    released(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\nexport default function Released({ id, children }) {\r\n  const [released, { loading, error }] = useMutation(RELEASE_MUTATION, {\r\n    variables: { id },\r\n    refetchQueries: [\r\n      { query: ALL_PRODUCTS_QUERY_SOLD },\r\n      'ALL_PRODUCTS_QUERY_SOLD',\r\n    ],\r\n  });\r\n  return (\r\n    <ButtonStyles\r\n      style={{\r\n        fontSize: '1.2em',\r\n        marginTop: '12px',\r\n      }}\r\n      type=\"button\"\r\n      disabled={loading}\r\n      onClick={() => {\r\n        if (\r\n          confirm(\r\n            'You are about to release the funds for this item into your Indie Bubba account.\\n\\nThe funds will then be paid out to your nominated bank account and arrive in the next few days.'\r\n          )\r\n        ) {\r\n          released().catch((err) => alert(err.message));\r\n        }\r\n      }}\r\n    >\r\n      {children}\r\n    </ButtonStyles>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}